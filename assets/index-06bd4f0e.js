var B=Object.defineProperty;var P=(a,t,s)=>t in a?B(a,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[t]=s;var h=(a,t,s)=>(P(a,typeof t!="symbol"?t+"":t,s),s),L=(a,t,s)=>{if(!t.has(a))throw TypeError("Cannot "+s)};var n=(a,t,s)=>(L(a,t,"read from private field"),s?s.call(a):t.get(a)),u=(a,t,s)=>{if(t.has(a))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(a):t.set(a,s)},g=(a,t,s,i)=>(L(a,t,"write to private field"),i?i.call(a,s):t.set(a,s),s),x=(a,t,s,i)=>({set _(e){g(a,t,e,s)},get _(){return n(a,t,i)}});(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const R={char:"./src/assets/images/char.png",charDown:"./src/assets/images/charDown.png",charUp:"./src/assets/images/charUp.png",charLeft:"./src/assets/images/charLeft.png",charRight:"./src/assets/images/charRight.png",loadbarEmpty:"./src/assets/images/loadbar-empty.png",loadbarFull:"./src/assets/images/loadbar-full.png",mainMap:"./src/assets/images/map.png",mapForeground:"./src/assets/images/map_foreground.png",skull:"./src/assets/images/bug.png"};var m;class z{constructor(){u(this,m,[]);h(this,"canvas");h(this,"position",{x:0,y:0});h(this,"ctx");h(this,"limit",{left:.2,right:.9,up:.1,down:.9});h(this,"map");h(this,"getEdge",t=>{if(!t)return 0;const s=t=="left"||t==="right"?"x":"y",i=t=="left"||t==="right"?"width":"height";return this.position[s]+this.canvas[i]*this.limit[t]});const t=document.createElement("canvas");this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.resizeListener(),this.initialize()}get height(){return this.canvas.height}get width(){return this.canvas.width}initialize(){const{width:t,height:s}=document.body.getBoundingClientRect();this.canvas.width=t,this.canvas.height=s,document.body.appendChild(this.canvas)}addMap(t){this.addSprite(t),this.map=t}clearSprites(){g(this,m,[])}addSprite(t){g(this,m,[...n(this,m),t])}removeSprite(t){n(this,m).filter(s=>JSON.stringify(s)===JSON.stringify(t))}resizeListener(){window.addEventListener("resize",()=>{this.initialize()})}centerCamera(t){this.position={x:(t.width-this.canvas.width)/2,y:(t.height-this.canvas.height)/2}}render(){if(!this.ctx)return;const{x:t,y:s}=this.position;this.ctx.save(),this.ctx.translate(-t,-s),this.ctx.fillStyle="#222",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),n(this,m).forEach(i=>i.draw(this.ctx,this.canvas)),this.ctx.restore()}}m=new WeakMap;class S{constructor({position:t,velocity:s,image:i,frames:e={max:1},sprites:o}){h(this,"position");h(this,"velocity");h(this,"image");h(this,"frames");h(this,"moving",!1);h(this,"sprites");h(this,"height");h(this,"width");this.position=t,this.velocity=s,this.image=i,this.frames={...e,val:0,elapsed:0},this.sprites=o,this.height=i.height,this.width=i.width/this.frames.max}draw(t){t.drawImage(this.image,(this.frames.val||0)*this.width,0,this.image.width/this.frames.max,this.image.height,this.position.x-this.image.width/this.frames.max,this.position.y-this.image.height/this.frames.max,this.image.width/this.frames.max,this.image.height),this.frames.max>1&&this.frames.elapsed!==void 0&&this.frames.elapsed++,(this.frames.elapsed??0)%10===0&&(this.frames.val!==void 0&&this.frames.val<this.frames.max-1?this.frames.val++:this.frames.val=0)}}class K{constructor(t,s,i){h(this,"movement",{left:!1,right:!1,up:!1,down:!1});h(this,"speed",3);h(this,"lastMovement",null);h(this,"isMoving",!1);h(this,"stepsMap",{left:this.speed*-1,right:this.speed,up:this.speed*-1,down:this.speed});this.char=t,this.canvas=s,this.colision=i,this.keyBinding()}getParsedKey(t,s){return t.includes("Arrow")?t.toLowerCase().replace("arrow",""):s[t]}verifyScreenLimit(t,s,i,e){var o;s.position[t]<0&&(s.position={...s.position,[t]:0}),s.position[t]+s[i]>((e==null?void 0:e[i])??0)&&(s.position={...s.position,[t]:(((o=this.canvas.map)==null?void 0:o[i])??0)-this.canvas[i]})}updateCamera(t,s,i,e){if(!e)return;const o=e==="left"||e==="right"?"width":"height",r=e==="right"||e==="down"?s.position[i]+s[o]:s.position[i];this.canvas.position={...t,[i]:r-this.canvas[o]*this.canvas.limit[e]},this.verifyScreenLimit(i,this.canvas,o,this.canvas.map)}updateChar(t,s,i){var d,p,c;if(this.char.image=this.char.sprites[`char${i[0].toUpperCase()+i.substring(1)}`],(d=this.colision)!=null&&d.verifyCollide({position:{...this.char.position,[s]:this.char.position[s]+this.stepsMap[this.lastMovement]},height:this.char.height,width:this.char.width},s,this.stepsMap[this.lastMovement]))return;const e=t[s]+this.stepsMap[i],o=((p=this.canvas.map)==null?void 0:p.width)??0,r=((c=this.canvas.map)==null?void 0:c.height)??0;if(s==="x"&&e<this.char.width){this.char.position={...t,x:this.char.width};return}if(s==="x"&&e>o){this.char.position={...t,x:o};return}if(s==="y"&&e<0){this.char.position={...t,y:0};return}if(s==="y"&&e>r){this.char.position={...t,y:r};return}this.char.position={...t,[s]:e}}charMovement(){const t=this.lastMovement==="right"||this.lastMovement=="left"?"x":"y";this.isMoving=!0;const s=()=>{if(!this.isMoving)return;window.requestAnimationFrame(s);const i=this.canvas.position;if(this.updateChar(this.char.position,t,this.lastMovement),this.char.position.x<this.canvas.getEdge("left")&&this.lastMovement==="left"){this.updateCamera(i,this.char,"x","left");return}if(this.char.position.x+this.char.width>this.canvas.getEdge("right")&&this.lastMovement==="right"){this.updateCamera(i,this.char,"x","right");return}if(this.char.position.y<this.canvas.getEdge("up")&&this.lastMovement==="up"){this.updateCamera(i,this.char,"y","up");return}if(this.char.position.y+this.char.height>this.canvas.getEdge("down")&&this.lastMovement==="down"){this.updateCamera(i,this.char,"y","down");return}};s()}keyBinding(){const t={a:"left",s:"down",d:"right",w:"up"};document.addEventListener("keydown",s=>{const i=this.getParsedKey(s.key,t);Object.keys(this.movement).includes(i)&&(this.movement={...this.movement,[i]:!0},i!==this.lastMovement&&(this.lastMovement=i,this.charMovement()))}),document.addEventListener("keyup",s=>{const i=this.getParsedKey(s.key,t);this.movement[i]=!1,this.char.image=this.char.sprites.char,this.lastMovement=null,this.isMoving=!1})}}var w,v;class A{constructor(){u(this,w,0);u(this,v,0);h(this,"images",{})}set progress(t){g(this,w,t)}get progress(){return n(this,w)}updateProgress(t){this.progress=100/t*n(this,v)}async loadAssets(t){Object.entries(t).forEach(([s,i])=>{new Promise((e,o)=>{const r=new Image;r.addEventListener("load",()=>e(r)),r.addEventListener("error",d=>o(d)),r.src=i}).then(e=>(x(this,v)._++,this.images[s]=e,this.updateProgress(Object.keys(t).length),e))})}}w=new WeakMap,v=new WeakMap;class E{constructor({position:t,image:s}){h(this,"position");h(this,"image");h(this,"height");h(this,"width");this.image=s,this.position=t,this.height=s.height,this.width=s.width}draw(t){t.drawImage(this.image,0,0,this.width,this.height)}}class F{constructor(t,s,i){h(this,"width",0);h(this,"height",0);h(this,"loadBarImages");h(this,"position",{x:0,y:0});h(this,"completed",!1);this.onEnd=s,this.gameAssets=i,this.loadAssets(t)}loadAssets(t){const s=new A;s.loadAssets({empty:"./src/assets/images/loadbar-empty.png",full:"./src/assets/images/loadbar-full.png"}).then(()=>{this.loadBarImages=s.images,t()})}draw(t,s){var d,p;if(this.completed||!((d=this.loadBarImages)!=null&&d.empty)||!((p=this.loadBarImages)!=null&&p.full))return;this.position={x:s.width/2,y:s.height/2};const{empty:i,full:e}=this.loadBarImages,{x:o,y:r}=this.position;t.fillStyle="#222",t.fillRect(0,0,s.width,s.height),t.drawImage(i,o-i.width/2,r-i.height/2),t.drawImage(e,0,0,i.width/100*this.gameAssets.progress,i.height,o-i.width/2,r-i.height/2,i.width/100*this.gameAssets.progress,i.height),this.gameAssets.progress===100&&(this.completed=!0,setTimeout(this.onEnd,500))}}var l,f;class N extends S{constructor(s,i){super(s);u(this,l,"left");u(this,f,0);h(this,"maxMovement",3);this.collisions=i}draw(s){s.drawImage(this.image,(this.frames.val||0)*this.width,0,this.image.width/this.frames.max,this.image.height,this.position.x-this.image.width/this.frames.max,this.position.y-this.image.height/this.frames.max,this.image.width/this.frames.max,this.image.height),this.frames.max>1&&this.frames.elapsed!==void 0&&this.frames.elapsed++,(this.frames.elapsed??0)%10===0&&(this.frames.val!==void 0&&this.frames.val<this.frames.max-1?this.frames.val++:this.frames.val=0);const i={left:-3,right:3,up:-3,down:3},e=n(this,l)=="left"||n(this,l)==="right"?"x":"y";if(n(this,f)===100){g(this,f,0);const o=Object.keys(i),r=o[o.length*Math.random()<<0];g(this,l,r)}n(this,f)%2===0&&!this.collisions.verifyCollide({position:{...this.position,[e]:this.position[e]+i[n(this,l)]},height:this.height,width:this.width},e,i[n(this,l)])&&(this.position[e]=this.position[e]+i[n(this,l)]),x(this,f)._++}}l=new WeakMap,f=new WeakMap;class j{constructor({position:t,width:s,height:i}){h(this,"width",48);h(this,"height",48);h(this,"position");this.width=s??48,this.height=i??48,this.position=t}draw(t){t.fillStyle="rgba(255,0,0,0)",t.fillRect(this.position.x,this.position.y,this.width,this.height)}}class U{constructor({height:t,width:s},i){h(this,"width");h(this,"height");h(this,"boundaries",[]);this.collisionsMap=i,this.height=t,this.width=s,this.mapCollisions()}rectangularCollision({rectangle1:t,rectangle2:s}){return t.position.x+t.width>=s.position.x&&t.position.x<=s.position.x+s.width-30&&t.position.y<=s.position.y+s.height-30&&t.position.y+t.height>=s.position.y}mapCollisions(){const t=[];for(let s=0;s<this.collisionsMap.length;s+=70)t.push(this.collisionsMap.slice(s,70+s));t.forEach((s,i)=>{s.forEach((e,o)=>{e===183&&this.boundaries.push(new j({position:{x:o*48,y:i*48}}))})})}draw(t){this.boundaries.forEach(s=>{s.draw(t)})}verifyCollide(t,s,i){return this.boundaries.some(e=>this.rectangularCollision({rectangle1:{...t,height:t.height-20,position:{x:t.position.x-t.width,y:t.position.y}},rectangle2:{...e,[s]:e.position[s]+i-100}}))}}const q=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,183,183,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,183,183,0,183,183,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,183,183,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,70,84,0,0,183,183,0,0,183,183,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,183,183,183,183,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,183,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,183,183,183,183,183,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,183,183,0,183,183,183,183,183,0,0,0,183,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,0,183,0,0,0,0,0,0,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,183,183,0,0,183,183,0,0,183,183,183,183,183,183,183,183,183,0,0,183,183,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];document.addEventListener("DOMContentLoaded",async()=>{const a=new A,t=new z,s=new F(()=>{setTimeout(async()=>{a.loadAssets(R)},1e3)},()=>{t.clearSprites();const{charLeft:e,charRight:o,charUp:r,charDown:d,char:p,mainMap:c,skull:M,mapForeground:I}=a.images,y=new U({height:c.height,width:c.width},q),C=new S({position:{x:c.width/2,y:c.height/2-50},velocity:0,image:p,frames:{max:4},sprites:{charLeft:e,charRight:o,charUp:r,charDown:d,char:p}}),k=new N({position:{x:c.width/2,y:c.height/2-100},velocity:0,image:M,frames:{max:4},sprites:{skull:M}},y),b=new E({position:{x:t.width/2,y:t.height/2},image:c}),O=new E({position:{x:t.width/2,y:t.height/2},image:I});new K(C,t,y),t.addMap(b),t.addSprite(C),t.addSprite(k),t.addSprite(y),t.addSprite(O),t.centerCamera(b)},a);t.addSprite(s);const i=()=>{window.requestAnimationFrame(i),t.render()};i()});
